import time
from Assignment2 import karatsuba_poly_multiply
from Assignment2v1 import poly_mul

l1 = []  # List to store Karatsuba times
l2 = []  # List to store Normal multiplication times

def run():

    print("Test case 2")
    p1 = [1, 1, 1]
    p2 = [1, 1, 2]
    t_start = time.time()
    result = karatsuba_poly_multiply(p1, p2)
    t_end = time.time()
    l1.append((t_end - t_start) * 1000)  # Convert time to milliseconds

    t_start = time.time()
    result = poly_mul(p1, p2, len(p1))
    t_end = time.time()
    l2.append((t_end - t_start) * 1000)  # Convert time to milliseconds

    print("Test case 3")
    p1 = [1, 1, 1, 1]
    p2 = [1, 1, 1, 2]
    t_start = time.time()
    result = karatsuba_poly_multiply(p1, p2)
    t_end = time.time()
    l1.append((t_end - t_start) * 1000)  # Convert time to milliseconds

    t_start = time.time()
    result = poly_mul(p1, p2, len(p1))
    t_end = time.time()
    l2.append((t_end - t_start) * 1000)  # Convert time to milliseconds

    print("Test case 4")
    p1 = [1, 1, 1, 1, 1]
    p2 = [1, 1, 1, 1, 2]
    t_start = time.time()
    result = karatsuba_poly_multiply(p1, p2)
    t_end = time.time()
    l1.append((t_end - t_start) * 1000)  # Convert time to milliseconds

    t_start = time.time()
    result = poly_mul(p1, p2, len(p1))
    t_end = time.time()
    l2.append((t_end - t_start) * 1000)  # Convert time to milliseconds

    print("Test case 1")
    p1 = [124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          1]
    p2 = [124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245, 124512451245,
          2]
    t_start = time.time()
    result = karatsuba_poly_multiply(p1, p2)
    t_end = time.time()
    l1.append((t_end - t_start) * 1000)  # Convert time to milliseconds
    t_start = time.time()
    result = poly_mul(p1, p2, len(p1))
    t_end = time.time()
    l2.append((t_end - t_start) * 1000)  # Convert time to milliseconds

run()
print()
print("Karatsuba Time (milliseconds):", l1)
print()
print("Normal Time (milliseconds):", l2)
